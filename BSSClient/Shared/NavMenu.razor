@using CoreImplementation.ServiceInterfaces;
@using CoreImplementation.Model;

@inject ITravelService travelService


<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href=""><span class="glyphicon glyphicon-globe"></span> Travel Helper</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Домашняя страница
            </NavLink>


            <LoginControl></LoginControl>


            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> @(travel?.Name ?? "Путешествие не выбрано")
            </NavLink>




        </li>
    </ul>
</div>





@code {

    private VMTravel travel { get; set; }

    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }


    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }
}